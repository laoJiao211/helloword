# This document records daily work and other log infomation.

2019/6/24 23.00 Monday

.WORK_PLAN
    待验证模块：port、stp、lldp、mirror、garp；未实现后台模块：mac、trunk、
    1.验证完成的那些模块。
    2.剩余的看看要不要完成吧，开会讲一下。
    3.看看分配的任务估计这一周要分配修改之前发现的bug的任务。
    其他的没有了，估计也够忙活的了，主要web也是新学，慢一点，但是时间又不允许。不过能学到新东西，很棒了。
  
.STUDY_PLAN
    1.<8.30-8.50><Linux系统高级编程.PDF> by my phone.
    2.<12.30-13.00>分析一下留言板的功能吧。
    3.<13.00-14.00>sleep
    4.<15.00-18.00>学习强国文章、视频学习。
    5.<18.00-20.30>根据work完成情况，未完成则继续work，完成则查看别人的md文件，或者看留言板相关的内容。
    6.<21.30-22.00>小崽子视频
    7.<22.30-23.00>在家记录一天的completion和summary，以及新一天plan，提交至github。
    8.<23.10-24.00>如果想玩的话，LOL和虎牙。不想玩就洗洗上床玩会儿手机。也没啥电影看。
    9.<24.00-01.00>玩或者睡觉。
    除学习任务，其他时间点可能不太会变，晚上时间可能不准，但是7必须要做，其他娱乐可自由安排一些。
    
.WORK_COMPLETION
    1.调试验证port、stp、lldp、mirror模块，为验证完成garp相关，不过也差不多了。mac、trunk还是未实现，明天吧。
    2.开会还是说继续完成剩下的web相关，之前的问题还要修改，mac那里的还是一个难点。李总还说这周光口的要调试完成，下载计划的还是县配置一下那几个控制sfp的器件。
    没有其他的了，今天验证和调试那些模块已经很费时间了，下午又遇到一个c语言指针的问题，函数的一个参数是字符串数组，搞得有点蒙，看来还是不要用什么二级指针，三级指针了，老老实实要么用数组的写法，要么就用一个指针，之后自己计算偏移的方法，这两种好理解一点，不要跟自己增加难度，让别人也看不懂。
    明天验证完了之后，代码要合入版本库。
    
.STUDY_COMPLETION
    1.Finsih 今天看了mmap相关的，有一个问题，多个进程使用同一块映射内存空间，这个互斥操作时要自己控制的么。搜一下吧。搜到了在summary里面写一下吧。
    2.没分析，中午写了一点summary，然后就睡觉了。
    3.Finish
    4.Finish 58分
    5.work
    6.Finish 视频一半改电话了。
    7.Finish
    喝奶。。。
    
    
.SUMMARY
    1.vim配置文件
    2.Linux grep命令参数
        -R r 递归查找
        -n 显示所在该文件行号
        -w 全字符匹配
        -i 忽略大小写
        -l 只显示符合的文件名列表
        先记这么多 grep -rn "helloworld" /
    3.js 字符串处理之.trim() 字符串的该方法会删除串中前导、尾部空格以及行终止符，用到这个是因为在比较两个字符串过程中，明明打印出的字符都是一样的，但是一比较==就是false，网上找到这个方法后，发现其中一个串的尾部有一个空格。。好坑
    4.js 获取变量类型 typeof var 或 typeof(var)
    5.jQuery 判断是否为数组元素使用 $.inArray(str, array)未找到返回-1，找到返回下标。
    6.c语言数组传参：如果我们需要将char str[4][64]这个字符串数组作为参数传入一个函数，那么可以使用这两种方法：1.void func(char (*str)[64]) 2.void func(char *str) 1.中啥原理去看看c的语法吧，现在也没看。2.我倒是觉得好理解点，传入数组的首地址，之后再函数中自己计算偏移量，不要用[]这种操作，应该也能用，但是我不大会。指针还是一大块额，一级没啥说，就是二级指针还有字符串指针相关，还有函数指针，感觉有必要学习一下，优先级中吧，主要有[]操作是什么意思，还有字符串数组和函数指针。
    7.Linux api mmap 创建映射空间，具体用法这里不说了，就是说一下这个非亲属进程如何同步同一块映射空间，主要有两种方法：1.使用命名信号量semaphore，主要api：sem_open、sem_wait(mutex);、sem_post(mutex);、sem_close(mutex);、sem_unlink("mutex");就是创建一个clock文件，非亲属进程间使用这个信号量就需要使用一模一样的名字。2.在映射区中保留一个clock，就是讲信号量直接放到共享区，这种也不赖。
    今天先这样吧，这个指针需要在搞一下加深一下印象，弄啥都不要飘，踏踏实实的一个字一个字的打，一步一个脚印，不要听到别人啥心里就不平静了，你不可能赶上所有的热闹，认认真真干好自己的事情，切勿好高骛远。虚心一点，踏实一点，加油，以后有不知所措的时候，读一读这段话吧。

